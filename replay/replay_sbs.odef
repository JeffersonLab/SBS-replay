block sbs.tr.*

# so we can check constraints
variable sbs.x_fcp
variable sbs.y_fcp
variable sbs.z_fcp
variable sbs.x_bcp
variable sbs.y_bcp
variable sbs.z_bcp

variable sbs.HCALth_n
variable sbs.HCALph_n
variable sbs.HCALdir_x
variable sbs.HCALdir_y
variable sbs.HCALdir_z

#block sbs.tdctrig.*

block FTROI.*

block SBS.gold.*

cut goodtrack sbs.tr.n>0&&sbs.gemFT.track.nhits[0]>4
cut goodFPP sbs.gemFPP.track.ntrack>0

th1d hsbs_tg_th 'SBS target #theta;#theta_{tar};' sbs.tr.tg_th 100 -0.5 0.5 goodtrack
th1d hsbs_tg_ph 'SBS target #phi;#phi_{tar};' sbs.tr.tg_ph 100 -0.15 0.15 goodtrack
th1d hsbs_tg_y 'SBS target y; y_{tar} (m);' sbs.tr.tg_y 100 -0.2 0.1 goodtrack
th1d hsbs_p 'SBS track p; p (GeV);' sbs.tr.p 1000 0 10 goodtrack 
th1d hsbs_vz 'SBS vertex z; z_{vertex} (m);' sbs.tr.vz 100 -0.3 0.1 goodtrack 

th1d hsbs_thetaFPP 'FPP polar #theta;#vartheta_{FPP} (rad);' sbs.gemFPP.track.theta 100 0 0.25 goodFPP 
th1d hsbs_phiFPP 'FPP azimuthal #phi; #phi_{FPP} (rad);' sbs.gemFPP.track.phi 180 -3.15 3.15 goodFPP 
th1d hsbs_sclose 'FPP DOCA; s_{close} (m);' sbs.gemFPP.track.sclose 200 0 0.1 goodFPP 
th1d hsbs_zclose 'FPP z of closest approach; sbs.gemFPP.track.zclose 200 0 3.0 goodFPP 
