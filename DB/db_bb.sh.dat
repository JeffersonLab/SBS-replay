bb.sh.nchan = 189

## Detector map, format:
## crate slot start_channel end_channel
#bb.sh.detmap = 
#   4     4     62    63  -1 # One Lecroy 1881M ADC
#   4     1     0     63  0 # One Lecroy 1881M
#   4     2     0     63  0 # One Lecroy 1881M 
#   4     3     0     63  0 # One Lecroy 1881M 
#   4     4     0     62  0 # One Lecroy 1881M 

## Optional channel map
#bb.sh.chanmap =  1  2  3  4  5  6  7  -1   8  9 10 11 12 13 14  -1
#		15 16 17 18 19 20 21  -1  22 23 24 25 26 27 28  -1
#		29 30 31 32 33 34 35  -1  36 37 38 39 40 41 42  -1
#		43 44 45 46 47 48 49  -1  50 51 52 53 54 55 56  -1
#		57 58 59 60 61 62 63  -1  64 65 66 67 68 69 70  -1
#		71 72 73 74 75 76 77  -1  78 79 80 81 82 83 84  -1
#		85 86 87 88 89 90 91  -1  92 93 94 95 96 97 98  -1
#		99 100 101 102 103 104 105  -1 106 107 108 109 110 111 112  -1
#		113 114 115 116 117 118 119  -1 120 121 122 123 124 125 126  -1
#		127 128 129 130 131 132 133  -1 134 135 136 137 138 139 140  -1
#		141 142 143 144 145 146 147  -1 148 149 150 151 152 153 154  -1
#		155 156 157 158 159 160 161  -1 162 163 164 165 166 167 168  -1
#		169 170 171 172 173 174 175  -1 176 177 178 179 180 181 182  -1
#		183 184 185 186 187 188 189  -1 -1 -1 -1 -1 -1 -1 -1  -1
# 		-1 -1 -1 -1 -1 -1 -1  -1 -1 -1 -1 -1 -1 -1 -1  -1
# 		-1 -1 -1 -1 -1 -1 -1  -1 -1 -1 -1 -1 -1 -1 -1 

bb.sh.detmap = ##
#  6     20    2     2       -1 
  6     6     4     15       0
  6     7     0     15       0
  6     8     0     15       0
  6     9     0     15       0
  6     10     0     15       0
  6     13     0     15       0
  6     14     0     15       0
  6     15     0     15       0
  6     16     0     15       0
  6     17     0     15       0
  6     18     0     15       0
  6     19     0     15       0
  6     20     0     0        0

## Optional channel map
bb.sh.chanmap = 
0 7  14 21 28 35 42 49 56 63 70 77 84 91  98 105 112 119 126 133 140 147 154 161 168 175 182
1 8  15 22 29 36 43 50 57 64 71 78 85 92  99 106 113 120 127 134 141 148 155 162 169 176 183
2 9  16 23 30 37 44 51 58 65 72 79 86 93 100 107 114 121 128 135 142 149 156 163 170 177 184
3 10 17 24 31 38 45 52 59 66 73 80 87 94 101 108 115 122 129 136 143 150 157 164 171 178 185
4 11 18 25 32 39 46 53 60 67 74 81 88 95 102 109 116 123 130 137 144 151 158 165 172 179 186
5 12 19 26 33 40 47 54 61 68 75 82 89 96 103 110 117 124 131 138 145 152 159 166 173 180 187
6 13 20 27 34 41 48 55 62 69 76 83 90 97 104 111 118 125 132 139 146 153 160 167 174 181 188

## Positions in [m] where +z is roated by bb.theta
bb.sh.position = 0 0 2.5319 ## Need to re-check this number

## Size
bb.sh.size   =  0.595 2.295 0.37 # in meters

## Number of rows and columns
bb.sh.ncols =  7
bb.sh.nrows = 27

## Position of first module
bb.sh.xyz    =   1.105 0.255  0.000
## Space between modules
bb.sh.dxdydz =   0.085  .085  0.000

## Mininum energy  for a cluster center (not really used right now)
bb.sh.emin  = 0.0
## adc channels to mV assume F250 set fot 2V for 4096
bb.sh.adc.conv = 0.4882
# Threshold for pulse finding in waveform (mV)
bb.sh.adc.thres = 5.0
# Number of bins (bin=4ns) at the beginning of waveform used to determing average Pedestal
bb.sh.adc.NPedBin = 4
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
bb.sh.adc.NSB = 3
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
bb.sh.adc.NSA = 10
# Number of bin for fixed Threshold if no Threshold Crossing is found
bb.sh.adc.FixThresBin = 14
# Convert adc integral in pC to GeV
bb.sh.adc.gain = 1.0


